/********************************************
*         QBarcode ver.1.0                  *
*           Barcode class                   *
*                                           *
*  Copyright (c) 2015-2016  Sergey Zgukov   *
*  E-mail:  serg_@ukr.net                   *
********************************************/
/*
 This library is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 You should have received a copy of the GNU General Public License
 along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef QBARCODEDATA_H
#define QBARCODEDATA_H

// Pattern for Barcode EAN Zeichensatz A
//    L1   S1   L2   S2
const char tabelle_EAN_A[10][4] =
{
    '2', '6', '0', '5',    // 0
    '1', '6', '1', '5',    // 1
    '1', '5', '1', '6',    // 2
    '0', '8', '0', '5',    // 3
    '0', '5', '2', '6',    // 4
    '0', '6', '2', '5',    // 5
    '0', '5', '0', '8',    // 6
    '0', '7', '0', '6',    // 7
    '0', '6', '0', '7',    // 8
    '2', '5', '0', '6'     // 9
};

// Pattern for Barcode EAN Zeichensatz C
//   S1   L1   S2   L2
const char tabelle_EAN_C[10][4] =
{
    '7', '1', '5', '0',    // 0
    '6', '1', '6', '0',    // 1
    '6', '0', '6', '1',    // 2
    '5', '3', '5', '0',    // 3
    '5', '0', '7', '1',    // 4
    '5', '1', '7', '0',    // 5
    '5', '0', '5', '3',    // 6
    '5', '2', '5', '1',    // 7
    '5', '1', '5', '2',    // 8
    '7', '0', '5', '1'     // 9
};

// Pattern for Barcode EAN Zeichensatz B
//       L1   S1   L2   S2
const char tabelle_EAN_B[10][4] =
{
    '0', '5', '1', '7',    // 0
    '0', '6', '1', '6',    // 1
    '1', '6', '0', '6',    // 2
    '0', '5', '3', '5',    // 3
    '1', '7', '0', '5',    // 4
    '0', '7', '1', '5',    // 5
    '3', '5', '0', '5',    // 6
    '1', '5', '2', '5',    // 7
    '2', '5', '1', '5',    // 8
    '1', '5', '0', '7'     // 9

};

// Zuordung der Paraitaetsfolgen für EAN13
const char tabelle_ParityEAN13[10][6] =
{
  'A', 'A', 'A', 'A', 'A', 'A',    // 0
  'A', 'A', 'B', 'A', 'B', 'B',    // 1
  'A', 'A', 'B', 'B', 'A', 'B',    // 2
  'A', 'A', 'B', 'B', 'B', 'A',    // 3
  'A', 'B', 'A', 'A', 'B', 'B',    // 4
  'A', 'B', 'B', 'A', 'A', 'B',    // 5
  'A', 'B', 'B', 'B', 'A', 'A',    // 6
  'A', 'B', 'A', 'B', 'A', 'B',    // 7
  'A', 'B', 'A', 'B', 'B', 'A',    // 8
  'A', 'B', 'B', 'A', 'B', 'A'     // 9
  };


const char tabelle_2_5[10][5] =
{
    '0', '0', '1', '1', '0',    // 0
    '1', '0', '0', '0', '1',    // 1
    '0', '1', '0', '0', '1',    // 2
    '1', '1', '0', '0', '0',    // 3
    '0', '0', '1', '0', '1',    // 4
    '1', '0', '1', '0', '0',    // 5
    '0', '1', '1', '0', '0',    // 6
    '0', '0', '0', '1', '1',    // 7
    '1', '0', '0', '1', '0',    // 8
    '0', '1', '0', '1', '0'     // 9

};

struct Code39
{
    char c;
    char data[10];
    short chk;
};

const Code39 tabelle_39[] =
{
    {'0', "505160605",  0},
    {'1', "605150506",  1},
    {'2', "506150506", 2},
    {'3', "606150505", 3},
    {'4', "505160506", 4},
    {'5', "605160505", 5},
    {'6', "506160505", 6},
    {'7', "505150606", 7},
    {'8', "605150605", 8},
    {'9', "506150605", 9},
    {'A', "605051506", 10},
    {'B', "506051506", 11},
    {'C', "606051505", 12},
    {'D', "505061506", 13},
    {'E', "605061505", 14},
    {'F', "506061505", 15},
    {'G', "505051606", 16},
    {'H', "605051605", 17},
    {'I', "506051600", 18},
    {'J', "505061605", 19},
    {'K', "605050516", 20},
    {'L', "506050516", 21},
    {'M', "606050515", 22},
    {'N', "505060516", 23},
    {'O', "605060515", 24},
    {'P', "506060515", 25},
    {'Q', "505050616", 26},
    {'R', "605050615", 27},
    {'S', "506050615", 28},
    {'T', "505060615", 29},
    {'U', "615050506", 30},
    {'V', "516050506", 31},
    {'W', "616050505", 32},
    {'X', "515060506", 33},
    {'Y', "615060505", 34},
    {'Z', "516060505", 35},
    {'-', "515050606", 36},
    {'.', "615050605", 37},
    {' ', "516050605", 38},
    {'*', "515060605", 0 },
    {'$', "515151505", 39},
    {'/', "515150515", 40},
    {'+', "515051515", 41},
    {'%', "505151515", 42}
};

const QString code39x[]  =
{
    "%U", "$A", "$B", "$C", "$D", "$E", "$F", "$G",
    "$H", "$I", "$J", "$K", "$L", "$M", "$N", "$O",
    "$P", "$Q", "$R", "$S", "$T", "$U", "$V", "$W",
    "$X", "$Y", "$Z", "%A", "%B", "%C", "%D", "%E",
    " ", "/A", "/B", "/C", "/D", "/E", "/F", "/G",
    "/H", "/I", "/J", "/K", "/L", "/M", "/N", "/O",
     "0",  "1",  "2",  "3",  "4",  "5",  "6",  "7",
    "8",  "9", "/Z", "%F", "%G", "%H", "%I", "%J",
    "%V",  "A",  "B",  "C",  "D",  "E",  "F",  "G",
    "H",  "I",  "J",  "K",  "L",  "M",  "N",  "O",
    "P",  "Q",  "R",  "S",  "T",  "U",  "V",  "W",
    "X",  "Y",  "Z", "%K", "%L", "%M", "%N", "%O",
    "%W", "+A", "+B", "+C", "+D", "+E", "+F", "+G",
    "+H", "+I", "+J", "+K", "+L", "+M", "+N", "+O",
    "+P", "+Q", "+R", "+S", "+T", "+U", "+V", "+W",
    "+X", "+Y", "+Z", "%P", "%Q", "%R", "%S", "%T"
};


struct Code128{
    char a;
    char b;
    char c[3];
    char data[7];
};

const Code128 tabelle_128[] =
{
    { ' ',' ', "00", "212222"},
    { '!','!', "01", "222122"},
    { '"','"', "02", "222221"},
    { '#','#', "03", "121223"},
    { '$','$', "04", "121322"},
    { '%','%', "05", "131222"},
    { '&','&', "06", "122213"},
    { '\'', '\'',"07", "122312"},
    { '(', '(', "08", "132212"},
    { ')', ')', "09", "221213"},
    { '*', '*', "10", "221312"},
    { '+', '+', "11", "231212"},
    { '`', '`', "12", "112232"},
    /*{ '´', '´', "12", "112232"},*/
    { '-', '-', "13", "122132"},
    { '.', '.', "14", "122231"},
    { '/', '/', "15", "113222"},
    { '0', '0', "16", "123122"},
    { '1', '1', "17", "123221"},
    { '2', '2', "18", "223211"},
    { '3', '3', "19", "221132"},
    { '4', '4', "20", "221231"},
    { '5', '5', "21", "213212"},
    { '6', '6', "22", "223112"},
    { '7', '7', "23", "312131"},
    { '8', '8', "24", "311222"},
    { '9', '9', "25", "321122"},
    { ':', ':', "26", "321221"},
    { ';', ';', "27", "312212"},
    { '<', '<', "28", "322112"},
    { '=', '=', "29", "322211"},
    { '>', '>', "30", "212123"},
    { '?', '?', "31", "212321"},
    { '@', '@', "32", "232121"},
    { 'A', 'A', "33", "111323"},
    { 'B', 'B', "34", "131123"},
    { 'C', 'C', "35", "131321"},
    { 'D', 'D', "36", "112313"},
    { 'E', 'E', "37", "132113"},
    { 'F', 'F', "38", "132311"},
    { 'G', 'G', "39", "211313"},
    { 'H', 'H', "40", "231113"},
    { 'I', 'I', "41", "231311"},
    { 'J', 'J', "42", "112133"},
    { 'K', 'K', "43", "112331"},
    { 'L', 'L', "44", "132131"},
    { 'M', 'M', "45", "113123"},
    { 'N', 'N', "46", "113321"},
    { 'O', 'O', "47", "133121"},
    { 'P', 'P', "48", "313121"},
    { 'Q', 'Q', "49", "211331"},
    { 'R', 'R', "50", "231131"},
    { 'S', 'S', "51", "213113"},
    { 'T', 'T', "52", "213311"},
    { 'U', 'U', "53", "213131"},
    { 'V', 'V', "54", "311123"},
    { 'W', 'W', "55", "311321"},
    { 'X', 'X', "56", "331121"},
    { 'Y', 'Y', "57", "312113"},
    { 'Z', 'Z', "58", "312311"},
    { '[', '[', "59", "332111"},
    { '\\', '\\', "60", "314111"},
    { ']', ']', "61", "221411"},
    { '^', '^', "62", "431111"},
    { '_', '_', "63", "111224"},
    { ' ', '`', "64", "111422"},
    { ' ', 'a', "65", "121124"},
    { ' ', 'b', "66", "121421"},
    { ' ', 'c', "67", "141122"},
    { ' ', 'd', "68", "141221"},
    { ' ', 'e', "69", "112214"},
    { ' ', 'f', "70", "112412"},
    { ' ', 'g', "71", "122114"},
    { ' ', 'h', "72", "122411"},
    { ' ', 'i', "73", "142112"},
    { ' ', 'j', "74", "142211"},
    { ' ', 'k', "75", "241211"},
    { ' ', 'l', "76", "221114"},
    { ' ', 'm', "77", "413111"},
    { ' ', 'n', "78", "241112"},
    { ' ', 'o', "79", "134111"},
    { ' ', 'p', "80", "111242"},
    { ' ', 'q', "81", "121142"},
    { ' ', 'r', "82", "121241"},
    { ' ', 's', "83", "114212"},
    { ' ', 't', "84", "124112"},
    { ' ', 'u', "85", "124211"},
    { ' ', 'v', "86", "411212"},
    { ' ', 'w', "87", "421112"},
    { ' ', 'x', "88", "421211"},
    { ' ', 'y', "89", "212141"},
    { ' ', 'z', "90", "214121"},
    { ' ', '{', "91", "412121"},
    { ' ', '|', "92", "111143"},
    { ' ', '}', "93", "111341"},
    { ' ', '~', "94", "131141"},
    { ' ', ' ', "95", "114113"},
    { ' ', ' ', "96", "114311"},
    { ' ', ' ', "97", "411113"},
    { ' ', ' ', "98", "411311"},
    { ' ', ' ', "99", "113141"},
    { ' ', ' ', "  ", "114131"},
    { ' ', ' ', "  ", "311141"},
    { ' ', ' ', "  ", "411131"}
    };


struct Code93
{
    char c;
    char data[7];
};


const Code93 tabelle_93[]
{
        {'0', "131112"  },
        {'1', "111213"  },
        {'2', "111312"  },
        {'3', "111411"  },
        {'4', "121113"  },
        {'5', "121212"  },
        {'6', "121311"  },
        {'7', "111114"  },
        {'8', "131211"  },
        {'9', "141111"  },
        {'A', "211113"  },
        {'B', "211212"  },
        {'C', "211311"  },
        {'D', "221112"  },
        {'E', "221211"  },
        {'F', "231111"  },
        {'G', "112113"  },
        {'H', "112212"  },
        {'I', "112311"  },
        {'J', "122112"  },
        {'K', "132111"  },
        {'L', "111123"  },
        {'M', "111222"  },
        {'N', "111321"  },
        {'O', "121122"  },
        {'P', "131121"  },
        {'Q', "212112"  },
        {'R', "212211"  },
        {'S', "211122"  },
        {'T', "211221"  },
        {'U', "221121"  },
        {'V', "222111"  },
        {'W', "112122"  },
        {'X', "112221"  },
        {'Y', "122121"  },
        {'Z', "123111"  },
        {'-', "121131"  },
        {'.', "311112"  },
        {' ', "311211"  },
        {'$', "321111"  },
        {'/', "112131"  },
        {'+', "113121"  },
        {'%', "211131"  },
        {'[', "121221"  },   // only used for Extended Code 93
        {']', "312111"  },   // only used for Extended Code 93
        {'{', "311121"  },   // only used for Extended Code 93
        {'}', "122211"  }    // only used for Extended Code 93
};

const QString code93x[] =

{
    "]U", "[A", "[B", "[C", "[D", "[E", "[F", "[G",
    "[H", "[I", "[J", "[K", "[L", "[M", "[N", "[O",
    "[P", "[Q", "[R", "[S", "[T", "[U", "[V", "[W",
    "[X", "[Y", "[Z", "]A", "]B", "]C", "]D", "]E",
    " ",  "{A", "{B", "{C", "{D", "{E", "{F", "{G",
    "{H", "{I", "{J", "{K", "{L", "{M", "{N", "{O",
    "0",  "1",  "2",  "3",  "4",  "5",  "6",  "7",
    "8",  "9",  "{Z", "]F", "]G", "]H", "]I", "]J",
    "]V", "A",  "B",  "C",  "D",  "E",  "F",  "G",
    "H",  "I",  "J",  "K",  "L",  "M",  "N",  "O",
    "P",  "Q",  "R",  "S",  "T",  "U",  "V",  "W",
    "X",  "Y",  "Z",  "]K", "]L", "]M", "]N", "]O",
    "]W", "}A", "}B", "}C", "}D", "}E", "}F", "}G",
    "}H", "}I", "}J", "}K", "}L", "}M", "}N", "}O",
    "}P", "}Q", "}R", "}S", "}T", "}U", "}V", "}W",
    "}X", "}Y", "}Z", "]P", "]Q", "]R", "]S", "]T"
};

const QString tabelle_MSI[] =
{
    "51515151" ,    // '0'
    "51515160" ,    // '1'
    "51516051" ,    // '2'
    "51516060" ,    // '3'
    "51605151" ,    // '4'
    "51605160" ,    // '5'
    "51606051" ,    // '6'
    "51606060" ,    // '7'
    "60515151" ,    // '8'
    "60515160"      // '9'
};

const QString tabelle_PostNet[] =
{
    "5151A1A1A1" ,    // '0'
    "A1A1A15151" ,    // '1'
    "A1A151A151" ,    // '2'
    "A1A15151A1" ,    // '3'
    "A151A1A151" ,    // '4'
    "A151A151A1" ,    // '5'
    "A15151A1A1" ,    // '6'
    "51A1A1A151" ,    // '7'
    "51A1A151A1" ,    // '8'
    "51A151A1A1"      // '9'
};

struct Codabar
{
    char c;
    char data[8];
};

const Codabar tabelle_cb[] =
{
   {'1', "5050615"},
   {'2', "5051506"},
   {'3', "6150505"},
   {'4', "5060515"},
   {'5', "6050515"},
   {'6', "5150506"},
   {'7', "5150605"},
   {'8', "5160505"},
   {'9', "6051505"},
   {'0', "5050516"},
   {'-', "5051605"},
   {'$', "5061505"},
   {':', "6050606"},
   {'/', "6060506"},
   {'.', "6060605"},
   {'+', "5060606"},
   {'A', "5061515"},
   {'B', "5151506"},
   {'C', "5051516"},
   {'D', "5051615"}
};







#endif // QBARCODEDATA_H
